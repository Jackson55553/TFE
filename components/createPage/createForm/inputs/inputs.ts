import { MyInputType } from '../../../../types/MyInputType';
import styles from '../../../../styles/sass/_createForm.module.scss';

export const inputsRequired: MyInputType[] = [
    {
        name: 'name',
        id: 'inputName',
        type: 'text',
        placeholder: 'Enter token name',
        maxLength: 30,
        label: 'Token Name',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        pattern: "[\s\S]*{1,}$",
        dataTitle: 'Example: Solana (max. 30 characters)',
        errorMessage: 'Name should be 1-30 characters',
        required: true,
    },
    {
        name: 'symbol',
        id: 'inputSymbol',
        type: 'text',
        placeholder: 'Enter token symbol',
        maxLength: 10,
        label: 'Token symbol',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        dataTitle: 'Example: SOL (max. 10 characters)',
        errorMessage: 'Symbol should be 1-10 characters',
        required: true,
    },
    {
        name: 'decimals',
        id: 'inputDecimals',
        type: 'number',
        placeholder: 'Enter token decimals',
        maxLength: 1,
        label: 'Token decimals',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        min: 1,
        max: 9,
        step: 1,
        dataTitle: 'Example: 9 (max. 9)',
        errorMessage: 'Decimals must be greater than 1 and less than 9 ',
        required: true,
    },
    {
        name: 'supply',
        id: 'inputSupply',
        type: 'number',
        placeholder: 'Enter token Supply',
        maxLength: 15,
        label: 'Token Supply',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        min: 1,
        max: 1844674407370955,
        step: 1,
        dataTitle: 'Example: 1000000 (max. 18446744073709551615)',
        errorMessage: 'Supply must be greater than 0 and less than 18446744073709551615',
        required: true,
    },
];

export const inputsExtension: MyInputType[] = [
    {
        name: 'website',
        id: 'inputWebsite',
        type: 'url',
        placeholder: 'Website URL',
        label: 'Website URL',
        className: `${styles.extensionsInput} ${styles.focusTransition}`,
        pattern: `https?:\/\/(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?:\/\/(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,}`,
    },
    {
        name: 'telegram',
        id: 'inputTelegram',
        type: 'url',
        placeholder: 'Telegram URL',
        label: 'Telegram URL',

        className: `${styles.extensionsInput} ${styles.focusTransition}`,
        pattern: `https?:\/\/(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?:\/\/(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,}`,
    },
    {
        name: 'twitter',
        id: 'inputTwitter',
        type: 'url',
        placeholder: 'Twitter URL',
        label: 'Twitter URL',

        className: `${styles.extensionsInput} ${styles.focusTransition}`,
        pattern: `https?:\/\/(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?:\/\/(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,}`,
    },
    {
        name: 'discord',
        id: 'inputDiscord',
        type: 'url',
        placeholder: 'Discord URL',
        label: 'Discord URL',

        className: `${styles.extensionsInput} ${styles.focusTransition}`,
        pattern: `https?:\/\/(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?:\/\/(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,}`,
    },
];

export const inputsCreator: MyInputType[] = [
    {
        name: 'name',
        id: 'inputCreatorName',
        type: 'text',
        placeholder: 'Enter creator name',
        maxLength: 50,
        label: 'Creator Name',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        dataTitle: 'Example: Token For Ever',
    },
    {
        name: 'site',
        id: 'inputCreatorSite',
        type: 'url',
        placeholder: 'Enter creator site',
        label: 'Creator Site',
        className: `${styles.mainTokenInput} ${styles.focusTransition}`,
        dataTitle: 'Example: https://example.com',
        pattern: `https?:\/\/(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?:\/\/(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,}`,
    },
];
export const imageInput: MyInputType = {
    name: 'image',
    id: 'inputImage',
    type: 'url',
    placeholder: 'Image URL',
    className: `${styles.mainTokenInput} ${styles.focusTransition} ${styles.urlImageInput}`,
    pattern: `https?://[a-zA-Z0-9]{2,}\.[a-zA-Z]{2,}.*`,
    required: true,
    dataTitle: 'Example: https://Image.com (recomended size: 1000x1000 pixels)',
    label: 'Image',
    errorMessage: 'The image Url is incorrected.',
};
